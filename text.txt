double east_car = prob_new_vehicle_eastbound * proportion_of_cars;
double east_car_l = east_car * proportion_left_turn_cars;
double east_car_r = east_car_l + (east_car * proportion_right_turn_cars);
double east_car_s = east_car_r + (east_car * proportion_straight_cars);

double east_SUV = (prob_new_vehicle_eastbound * proportion_of_SUVs);
double east_SUV_l = east_car_s + (east_SUV * proportion_left_turn_SUVs);
double east_SUV_r = east_SUV_l + (east_SUV * proportion_right_turn_SUVs);
double east_SUV_s = east_SUV_r + (east_SUV * proportion_straight_SUVs);

double east_truck = (prob_new_vehicle_eastbound * proportion_of_trucks);
double east_truck_l = east_SUV_s + (east_truck * proportion_left_turn_trucks);
double east_truck_r = east_truck_l + (east_truck * proportion_right_turn_trucks);
double east_truck_s = east_truck_r + (east_truck * proportion_straight_trucks);

//WEST
double west_car = prob_new_vehicle_westbound * proportion_of_cars;
double west_car_l = west_car * proportion_left_turn_cars;
double west_car_r = west_car_l + (west_car * proportion_right_turn_cars);
double west_car_s = west_car_r + (west_car * proportion_straight_cars);

double west_SUV = (prob_new_vehicle_westbound * proportion_of_SUVs);
double west_SUV_l = west_car_s + (west_SUV * proportion_left_turn_SUVs);
double west_SUV_r = west_SUV_l + (west_SUV * proportion_right_turn_SUVs);
double west_SUV_s = west_SUV_r + (west_SUV * proportion_straight_SUVs);

double west_truck = (prob_new_vehicle_westbound * proportion_of_trucks);
double west_truck_l = west_SUV_s + (west_truck * proportion_left_turn_trucks);
double west_truck_r = west_truck_l + (west_truck * proportion_right_turn_trucks);
double west_truck_s = west_truck_r + (west_truck * proportion_straight_trucks);

//SOUTH
double south_car = prob_new_vehicle_southbound * proportion_of_cars;
double south_car_l = south_car * proportion_left_turn_cars;
double south_car_r = south_car_l + (south_car * proportion_right_turn_cars);
double south_car_s = south_car_r + (south_car * proportion_straight_cars);

double south_SUV = (prob_new_vehicle_southbound * proportion_of_SUVs);
double south_SUV_l = south_car_s + (south_SUV * proportion_left_turn_SUVs);
double south_SUV_r = south_SUV_l + (south_SUV * proportion_right_turn_SUVs);
double south_SUV_s = south_SUV_r + (south_SUV * proportion_straight_SUVs);

double south_truck = (prob_new_vehicle_southbound * proportion_of_trucks);
double south_truck_l = south_SUV_s + (south_truck * proportion_left_turn_trucks);
double south_truck_r = south_truck_l + (south_truck * proportion_right_turn_trucks);
double south_truck_s = south_truck_r + (south_truck * proportion_straight_trucks);

//NORTH
double north_car = prob_new_vehicle_northbound * proportion_of_cars;
double north_car_l = north_car * proportion_left_turn_cars;
double north_car_r = north_car_l + (north_car * proportion_right_turn_cars);
double north_car_s = north_car_r + (north_car * proportion_straight_cars);

double north_SUV = (prob_new_vehicle_northbound * proportion_of_SUVs);
double north_SUV_l = north_car_s + (north_SUV * proportion_left_turn_SUVs);
double north_SUV_r = north_SUV_l + (north_SUV * proportion_right_turn_SUVs);
double north_SUV_s = north_SUV_r + (north_SUV * proportion_straight_SUVs);

double north_truck = (prob_new_vehicle_northbound * proportion_of_trucks);
double north_truck_l = north_SUV_s + (north_truck * proportion_left_turn_trucks);
double north_truck_r = north_truck_l + (north_truck * proportion_right_turn_trucks);
double north_truck_s = north_truck_r + (north_truck * proportion_straight_trucks);
